rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      let role = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return role == 'admin' || role == 'superAdmin'
             || request.auth.token.email == 'mumatechosting@gmail.com';
    }

    function isTeamMember(teamId) {
      return exists(/databases/$(database)/documents/teams/$(teamId)/members/$(request.auth.uid));
    }

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /users/{userId}/tasks/{taskId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /users/{userId}/sessions/{sessionId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /teams/{teamId} {
      allow read, write: if isAdmin();
    }

    match /teams/{teamId}/members/{uid} {
      allow read, write: if isAdmin() || uid == request.auth.uid;
    }

    match /clients/{clientId} {
      allow read, write: if isAdmin();
    }

    match /projects/{projectId} {
      allow read: if isAdmin() || isTeamMember(resource.data.teamId) || exists(/databases/$(database)/documents/projects/$(projectId)/members/$(request.auth.uid));
      allow write: if isAdmin();
    }

    match /projects/{projectId}/members/{uid} {
      allow read, write: if isAdmin() || uid == request.auth.uid;
    }

    match /projects/{projectId}/timeEntries/{entryId} {
      allow read, write: if isAdmin() || request.auth.uid == resource.data.userId;
    }

    match /invoices/{invoiceId} {
      allow read, write: if isAdmin();
    }

    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAdmin();
      allow update, delete: if false;
    }
  }
}
